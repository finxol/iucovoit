name: Auto Release


# only run when there is a new commit on main starting with "chore(release)"
on:
    push:
        branches:
            - main

env:
    REGISTRY: registry.ozna.me
    IMAGE_NAME: unicovoit

# create a new github release
jobs:
    tag:
        runs-on: ubuntu-latest
        if: "startsWith(github.event.head_commit.message, 'chore(release): v')"
        steps:
            -   uses: actions/checkout@v2
            -   uses: christophebedard/tag-version-commit@v1
                with:
                    token: ${{ secrets.GITHUB_TOKEN }}
                    version_regex: 'chore\(release\): v([0-9]+\.[0-9]+\.[0-9]+)'
                    version_tag_prefix: 'v'

    release:
        needs: tag
        runs-on: ubuntu-latest
        steps:
            -   uses: actions/checkout@v3
                with:
                    fetch-depth: 0

            -   uses: actions/setup-node@v3
                with:
                    node-version: 16.x

            -   run: npx changelogithub # or changelogithub@0.12 if ensure the stable result
                env:
                    GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}

    build:
        needs: release
        runs-on: ubuntu-latest
        permissions:
            contents: read
            packages: write

        steps:
            -   name: Checkout repository
                uses: actions/checkout@v2

            -   name: Fetch tags
                run: git fetch --depth=1 origin +refs/tags/*:refs/tags/*

            -   name: Set up Docker Buildx
                uses: docker/setup-buildx-action@v1

            # Login against a Docker registry except on PR
            # https://github.com/docker/login-action
            -   name: Log into registry ${{ env.REGISTRY }}
                if: github.event_name != 'pull_request'
                uses: docker/login-action@v1
                with:
                    username: finxol
                    password: ${{ secrets.DOCKER_REGISTRY_PASSWD }}
                    registry: ${{ env.REGISTRY }}

            # Uppercase to lowercase image name
            -   id: string
                uses: ASzc/change-string-case-action@v2
                with:
                    string: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

            # Extract metadata (tags, labels) for Docker
            # https://github.com/docker/metadata-action
            -   name: Extract Docker metadata
                id: meta
                uses: docker/metadata-action@v3
                with:
                    images: ${{ steps.string.outputs.lowercase }}
                    tags: |
                        type=raw,value=latest
                        type=ref,enable=true,priority=600,prefix=,suffix=,event=tag
                        type=semver,pattern={{version}}
                        type=semver,pattern={{major}}

            # Build and push Docker image with Buildx
            # https://github.com/docker/build-push-action
            -   name: Build and push Docker image
                uses: docker/build-push-action@v2
                with:
                    context: .
                    push: ${{ github.event_name != 'pull_request' }}
                    tags: ${{ steps.meta.outputs.tags }}
                    labels: ${{ steps.meta.outputs.labels }}
                    cache-from: type=gha
                    cache-to: type=gha,mode=max
                    secrets: |
                        "AUTH0_CLIENTID=${{ secrets.AUTH0_CLIENTID }}"
                        "AUTH0_DOMAIN=${{ secrets.AUTH0_DOMAIN }}"
